"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOwner = exports.isAdmin = exports.currentUser = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const bad_request_error_1 = require("../errors/bad-request-error");
const currentUser = (req, res, next) => {
    var _a, _b;
    console.log("CURRENT");
    console.log((_a = req.session) === null || _a === void 0 ? void 0 : _a.jwt);
    if (!((_b = req.session) === null || _b === void 0 ? void 0 : _b.jwt)) {
        return next();
        console.log("CURRENT");
    }
    console.log("CURRENT");
    try {
        const payload = jsonwebtoken_1.default.verify(req.session.jwt, process.env.JWT_KEY);
        console.log("CURRENT");
        req.currentUser = payload;
        console.log(payload);
    }
    catch (error) {
        console.log(error);
    }
    next();
};
exports.currentUser = currentUser;
const isAdmin = (req, res, next) => {
    var _a, _b;
    if (req.currentUser && ((_b = (_a = req.currentUser) === null || _a === void 0 ? void 0 : _a.id) === null || _b === void 0 ? void 0 : _b.email) !== "admin@gmail.com") {
        throw new bad_request_error_1.BadRequestError("You are not admin!");
    }
    else {
        console.log("IS admin");
        next();
    }
};
exports.isAdmin = isAdmin;
const isOwner = (req, res, next) => {
    var _a, _b;
    const { userId } = req.params;
    if (req.currentUser && ((_b = (_a = req.currentUser) === null || _a === void 0 ? void 0 : _a.id) === null || _b === void 0 ? void 0 : _b.id) !== userId) {
        throw new bad_request_error_1.BadRequestError("You are not the owner of this account!");
    }
    else {
        console.log("IS Owner");
        next();
    }
};
exports.isOwner = isOwner;
